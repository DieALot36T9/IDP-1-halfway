CREATE USER ebook_site IDENTIFIED BY 1124;

GRANT CONNECT, RESOURCE, DBA TO ebook_site;
GRANT CREATE SESSION TO ebook_site;
GRANT UNLIMITED TABLESPACE TO ebook_site;

CREATE TABLE users (
    user_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    phone VARCHAR2(20),
    password VARCHAR2(100) NOT NULL,
    session_token VARCHAR2(100),
    token_expiry TIMESTAMP,
    PRIMARY KEY(user_id)
);

CREATE TABLE publishers (
    publisher_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    phone VARCHAR2(20),
    address VARCHAR2(255),
    description VARCHAR2(1000),
    image_path VARCHAR2(255),
    password VARCHAR2(100) NOT NULL,
    session_token VARCHAR2(100),
    token_expiry TIMESTAMP,
    PRIMARY KEY(publisher_id)
);

CREATE TABLE admins (
    admin_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    name VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL,
    password VARCHAR2(100) NOT NULL,
    session_token VARCHAR2(100),
    token_expiry TIMESTAMP,
    PRIMARY KEY(admin_id)
);


-- Content and metadata tables (Categories, Books)

CREATE TABLE categories (
    category_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    category_name VARCHAR2(100) UNIQUE NOT NULL,
    PRIMARY KEY(category_id)
);

CREATE TABLE books (
    book_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    name VARCHAR2(255) NOT NULL,
    author_name VARCHAR2(100),
    description VARCHAR2(2000),
    cover_path VARCHAR2(255),
    pdf_path VARCHAR2(255),
    publisher_id NUMBER,
    category_id NUMBER,
    PRIMARY KEY(book_id),
    CONSTRAINT fk_book_publisher FOREIGN KEY (publisher_id) REFERENCES publishers(publisher_id) ON DELETE SET NULL,
    CONSTRAINT fk_book_category FOREIGN KEY (category_id) REFERENCES categories(category_id) ON DELETE SET NULL
);


-- Linking tables for user interactions and subscriptions
-- These link users to books and categories.

CREATE TABLE user_subscriptions (
    subscription_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    user_id NUMBER NOT NULL,
    category_id NUMBER NOT NULL,
    expiry_date DATE NOT NULL,
    PRIMARY KEY(subscription_id),
    CONSTRAINT fk_user_sub FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_category_sub FOREIGN KEY (category_id) REFERENCES categories(category_id) ON DELETE CASCADE,
    CONSTRAINT uq_user_category_sub UNIQUE (user_id, category_id)
);

CREATE TABLE bookmarks (
    bookmark_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    user_id NUMBER NOT NULL,
    book_id NUMBER NOT NULL,
    PRIMARY KEY(bookmark_id),
    CONSTRAINT fk_bookmark_user FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_bookmark_book FOREIGN KEY (book_id) REFERENCES books(book_id) ON DELETE CASCADE,
    CONSTRAINT uq_user_book_bookmark UNIQUE (user_id, book_id)
);

CREATE TABLE reading_history (
    history_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    user_id NUMBER NOT NULL,
    book_id NUMBER NOT NULL,
    last_read_timestamp TIMESTAMP,
    PRIMARY KEY(history_id),
    CONSTRAINT fk_history_user FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT fk_history_book FOREIGN KEY (book_id) REFERENCES books(book_id) ON DELETE CASCADE,
    CONSTRAINT uq_user_book_history UNIQUE (user_id, book_id)
);

INSERT INTO admins (name, email, password)
VALUES ('admin', 'admin@emailcom', 'admin');
